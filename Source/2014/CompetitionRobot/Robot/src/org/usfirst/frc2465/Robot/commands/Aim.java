// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2465.Robot.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2465.Robot.Robot;

/**
 *
 */
public class  Aim extends Command {

    static int distanceToTensionMap[] = new int[] {
        // TODO:  Calibrate tension based on distance values (in feet)
        100 // NOTE:  This is a bogus, uncalibrated value
    };    
    
    public Aim() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        
        // Get distance to wall from wall ranger
        double distance = Robot.wallRanger.getDistanceInches();
        // Calculate ankle angle
        double tension_value = (double)getTensionFromDistance((int) distance/12);
        // Set the ankle to the specified angle
        // TODO: Request tension value change
    }

    public int getTensionFromDistance(int distance_feet) {
        if ( distance_feet < 0 ) {
            return distanceToTensionMap[0];
        }
        else if ( distance_feet >= distanceToTensionMap.length ) {
            return distanceToTensionMap[distanceToTensionMap.length-1];
        }
        else {
            return distanceToTensionMap[distance_feet];
        }
    }
    
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
