#include "SwerveDrive.h"
#include "WPILib.h"
#include "../OI.h"
#include "Joystick.h"
SwerveDrive::SwerveDrive() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::swerveDriveSystem);
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void SwerveDrive::Initialize() {
	Robot::swerveDriveSystem->EnablePIDControl(true);
}

// Called repeatedly when this Command is scheduled to run
void SwerveDrive::Execute() {  
	Joystick* pstick = Robot::oi->getdriver_joystick();
	double twist = pstick->GetTwist();
	double y = pstick->GetY();
	double x = pstick->GetX();
	
	float deadband = 0.05;
	
	if ( twist > 0 )
	{
		if ( twist < deadband )
		{
			twist = 0.0;
		}
	}
	else if ( twist < 0 )
	{
		if ( twist > -deadband )
		{
			twist = 0.0;
		}
	}
	if ( x > 0 )
	{
		if ( x < deadband )
		{
			x = 0.0;
		}
	}
	else if ( x < 0 )
	{
		if ( x > -deadband )
		{
			x = 0.0;
		}
	}	
	if ( y > 0 )
	{
		if ( y < deadband )
		{
			y = 0.0;
		}
	}
	else if ( y < 0 )
	{
		if ( y > -deadband )
		{
			y = 0.0;
		}
	}	
	Robot::swerveDriveSystem->DoSwerve(x,y,twist);
}

// Make this return true when this Command no longer needs to run execute()
bool SwerveDrive::IsFinished() {
	return false;
}

// Called once after isFinished returns true
void SwerveDrive::End() {
	
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void SwerveDrive::Interrupted() {

}
